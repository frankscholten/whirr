/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.apache.whirr.integration.spring;

import org.apache.commons.configuration.ConfigurationException;
import org.apache.commons.configuration.PropertiesConfiguration;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.springframework.beans.factory.FactoryBean;
import org.springframework.core.io.Resource;
import org.springframework.util.Assert;

/**
 * Returns a Hadoop {@link Configuration} object based on configuration generated by Whirr.
 */
public class WhirrGeneratedHadoopConfigurationFactoryBean implements FactoryBean<Configuration> {

    public static final String PROP_USER_HOME = "user.home";
    public static final String PROP_CLUSTER_NAME = "whirr.cluster-name";
    public static final String WHIRR_DIRECTORY = ".whirr/";
    public static final String HADOOP_SITE_XML = "/hadoop-site.xml";

    private Resource whirrConfiguration;

    public WhirrGeneratedHadoopConfigurationFactoryBean(Resource whirrConfiguration) throws ConfigurationException {
        Assert.notNull(whirrConfiguration, "Parameter 'whirrConfiguration' cannot be null");

        if (!whirrConfiguration.exists()) {
            throw new IllegalArgumentException("No Whirr properties file found at: " + whirrConfiguration);
        }

        this.whirrConfiguration = whirrConfiguration;
    }

    public Configuration getObject() throws Exception {
        PropertiesConfiguration props = new PropertiesConfiguration(whirrConfiguration.getFile());
        String clusterName = props.getString(PROP_CLUSTER_NAME);

        Configuration configuration = new Configuration();
        configuration.addResource(getConfigurationPath(clusterName));

        return configuration;
    }

    public Class<?> getObjectType() {
        return Configuration.class;
    }

    public boolean isSingleton() {
        return false;
    }

    protected Path getConfigurationPath(String clusterName) {
        return new Path(System.getProperty(PROP_USER_HOME), WHIRR_DIRECTORY + clusterName + HADOOP_SITE_XML);
    }
}
